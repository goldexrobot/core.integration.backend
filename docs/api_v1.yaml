openapi: 3.0.0
info:
  title: Goldex Robot API
  description: The API is Goldex Robot side API business backend should call to. Actual servers are omitted for security reason.
  version: '1.0'
  contact:
    name: Docs at Github
    url: 'https://github.com/goldexrobot/core.integration.backend'
tags:
  - name: bot
    description: Bots state and control
  - name: eval
    description: Evaluation data
  - name: file
    description: Files downloading
  - name: price
    description: Metal prices
  - name: callback
    description: Business backend callbacks and named proxy endpoints
paths:
  ### BOTS ###
  '/bots':
    get:
      summary: Available bots
      description: Returns a list of bots **currently** available for the current project/integration. The list is not fixed as a bot can be moved to another project
      operationId: getBots
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BotInfo'
        'default':
          $ref: '#/components/responses/Error'
      tags:
        - bot
  '/bots/{botID}':
    parameters:
      - $ref: '#/components/parameters/BotID'
    get:
      summary: Bot info
      description: Describes a bot by ID
      operationId: getBot
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotInfo'
        'default':
          $ref: '#/components/responses/Error'
      tags:
        - bot
  '/bots/{botID}/command':
    parameters:
      - $ref: '#/components/parameters/BotID'
    post:
      summary: Send a command
      description: Sends a predefined command to the bot. This allows a manager to control the bot remotely
      operationId: sendBotCommand
      requestBody:
        description: Command to perform
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BotCommand'
      responses:
        '200':
          $ref: '#/components/responses/Empty'
        'default':
          $ref: '#/components/responses/Error'
      tags:
        - bot
  '/bots/{botID}/storage':
    parameters:
      - $ref: '#/components/parameters/BotID'
    get:
      summary: Storage state
      description: Describes the storage of the bot
      operationId: getBotStorage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotStorageState'
        'default':
          $ref: '#/components/responses/Error'
      tags:
        - bot
  ### EVALS ###
  '/evals/{evalID}':
    parameters:
      - $ref: '#/components/parameters/EvalID'
    get:
      summary: Evaluation state
      description: Retrieves evaluation data specified by ID
      operationId: getEval
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvalData'
        'default':
          $ref: '#/components/responses/Error'
      tags:
        - eval
  '/evals/{evalID}/photos':
    parameters:
      - $ref: '#/components/parameters/EvalID'
    get:
      summary: Evaluation photos
      description: Returns a list of photo IDs belong to the evaluation
      operationId: getEvalPhotos
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EvalPhoto'
        'default':
          $ref: '#/components/responses/Error'
      tags:
        - eval
  ### FILES ###
  '/files/photo/{photoID}':
    parameters:
      - $ref: '#/components/parameters/PhotoID'
    get:
      summary: Photo content
      description: Returns a content of the photo specified by ID
      operationId: getPhotoFile
      responses:
        '200':
          description: Image bytes with a corresponding `Content-Type` header
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
                example: '<JPEG image bytes>'
        'default':
          $ref: '#/components/responses/Error'
      tags:
        - file
  ### PRICES ###
  '/prices/lme/{metal}':
    parameters:
      - name: 'metal'
        in: path
        description: 'Metal'
        required: true
        schema:
          $ref: "#/components/schemas/Alloy"
    get:
      summary: London Metal Exchange
      description: Returns a metal current price **per gram** trading at [London Metal Exchange](https://www.lme.com/)
      operationId: getPriceLME
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetalPrice'
        'default':
          $ref: '#/components/responses/Error'
      tags:
        - price
  ### CALLBACKS ###
  '/callbacks':
    post:
      summary: Set callbacks
      description: Sets callback URLs to listen to events on business backend side. Send an empty object to clear callbacks
      operationId: setCallbacks
      requestBody:
        description: Callbacks mapping (or an empty list)
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallbackBinding'
      responses:
        '200':
          $ref: '#/components/responses/Empty'
        'default':
          $ref: '#/components/responses/Error'
      callbacks:
        'eval':
          $ref: '#/components/callbacks/EvalCallbacks'
        'storage':
          $ref: '#/components/callbacks/StorageCallbacks'
      tags:
        - callback
  '/proxy':
    post:
      summary: Set proxy endpoints for UI
      description: Sets a list of named endpoints for UI. The UI will make requests by name and Goldex will proxy these requests to the business backend endpoints. Send an empty object to clear the list
      operationId: setProxyEndpoints
      requestBody:
        description: Endpoints mapping (or an empty list)
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProxyEndpointList'
      responses:
        '200':
          $ref: '#/components/responses/Empty'
        'default':
          $ref: '#/components/responses/Error'
      callbacks:
        'eval':
          $ref: '#/components/callbacks/ProxyCallbacks'
      tags:
        - callback
components:
  schemas:
    ### PRIMITIVES ###
    ProjectID:
      title: ProjectID
      description: Project ID
      type: integer
      format: uint64
      example: 1
    BotID:
      title: BotID
      description: Bot ID
      type: integer
      format: uint64
      example: 42
    EvalID:
      title: EvalID
      description: Evaluation ID
      type: integer
      format: uint64
      example: 1337
    PhotoOriginEnum:
      title: PhotoOriginEnum
      description: An origin the photo comes from. `item` is the item photo, `outer` - photo from the outer camera
      type: string
      enum:
        - item
        - outer
      minLength: 1
      maxLength: 8
      x-oapi-codegen-extra-tags:
        validate: required,min=1,max=8,alpha,lowercase
    PhotoID:
      title: PhotoID
      description: Photo ID
      type: string
      minLength: 32
      maxLength: 32
      example: dafc61a8277b44a3a8dedf197a862783
      x-oapi-codegen-extra-tags: 
        validate: required,len=32,hexadecimal
    Alloy:
      title: Alloy
      description: Metal alloy
      type: string
      minLength: 2
      maxLength: 2
      enum:
        - au
        - ag
      x-oapi-codegen-extra-tags: 
        validate: required,len=2,alpha,lowercase
    SpectrumItem:
      title: SpectrumItem
      type: object
      required:
        - comp
        - cont
      properties:
        'comp':
          type: string
          minLength: 1
          maxLength: 2
          example: cu
          x-oapi-codegen-extra-tags: 
            validate: min=1,max=2,alpha,lowercase
        'cont':
          type: number
          format: double
          minimum: 0
          maximum: 100
          example: 13.37
          x-oapi-codegen-extra-tags: 
            validate: min=0,max=100
    StorageCell:
      title: StorageCell
      description: Cell address
      type: string
      minLength: 2
      maxLength: 4
      example: A9
      x-oapi-codegen-extra-tags: 
        validate: required,min=2,max=4,alphanum,uppercase
    StorageDomain:
      title: StorageDomain
      description: Domain/flow of the cell state change
      type: string
      minLength: 1
      maxLength: 16
      enum:
        - buyout
        - shop
        - pawnshop
        - collection
        - dashboard
        - other
      x-oapi-codegen-extra-tags:
        validate: required,min=1,max=16,alpha,lowercase
    StorageCellState:
      title: CellState
      description: Cell state
      type: object
      required: 
        - cell
        - domain
      properties:
        'cell':
          $ref: '#/components/schemas/StorageCell'
        'domain':
          $ref: '#/components/schemas/StorageDomain'
    StorageTransaction:
      title: StorageTransaction
      description: Unique ID of the cell state change
      type: string
      minLength: 32
      maxLength: 32
      example: 240702e1e8be42d39137c1d802dd6941
      x-oapi-codegen-extra-tags:
        validate: required,len=32,hexadecimal
    EvalStatus:
      title: EvalStatus
      description: Evaluation state
      type: string
      enum:
        - started
        - cancelled
        - finished
      minLength: 1
      maxLength: 16
      x-oapi-codegen-extra-tags:
        validate: required,min=1,max=16,alpha,lowercase
    EvalWarning:
      title: EvalWarning
      type: string
      enum:
        - 45_silver_in_gold
        - tungsten_in_gold
      minLength: 1
      maxLength: 32
      example: tungsten_in_gold
      x-oapi-codegen-extra-tags:
        validate: required,min=1,max=32,lowercase
    FinishedEvalData:
      title: FinishedEvalData
      type: object
      required:
        - alloy
        - alloy_content
        - confidence
        - fineness_carat
        - fineness_millesimal
        - fineness_purity
        - risky
        - spectrum
        - warnings
        - weight
      properties:
        'alloy':
          $ref: "#/components/schemas/Alloy"
        'alloy_content':
          description: Content of the metal in spectrum in percents
          type: number
          format: double
          minimum: 0
          maximum: 100
          example: 99.98
          x-oapi-codegen-extra-tags:
            validate: min=0,max=100
        'confidence':
          description: 'Overall result confidence/score [0..1], where 1 - is fully confident result and a value below 0.8 is alarming.'
          type: number
          format: double
          minimum: 0
          maximum: 1
          example: 0.889
          x-oapi-codegen-extra-tags:
            validate: min=0,max=1
        'fineness_carat':
          description: Detected fineness in carats
          type: string
          minLength: 2
          maxLength: 3
          example: 24K
          x-oapi-codegen-extra-tags:
            validate: min=2,max=3,alphanum,uppercase
        'fineness_millesimal':
          description: 'Detected millesimal fineness. Example: 585 stands for 58.5%, 999 for 99.9%, 9999 for 99.99%'
          type: integer
          format: int32
          minimum: 100
          maximum: 9999
          example: 585
          x-oapi-codegen-extra-tags:
            validate: min=100,max=9999
        'fineness_purity':
          description: Detected fineness purity in percents
          type: number
          format: double
          minimum: 10
          maximum: 100
          example: 99.99
          x-oapi-codegen-extra-tags: 
            validate: min=10,max=100
        'risky':
          description: Goldex decision about the evaluation
          type: boolean
          example: true
        'spectrum':
          description: Spectrum data
          type: array
          items:
            $ref: "#/components/schemas/SpectrumItem"
        'warnings':
          description: 'Warnings that should help with decision. Usually it is risky to accept the item if a warning is presented'
          type: array
          items:
            $ref: "#/components/schemas/EvalWarning"
        'weight':
          description: Item weight in grams
          type: number
          format: double
          minimum: 0.001
          example: 3.141
          x-oapi-codegen-extra-tags:
            validate: required,min=0.001
    CancelledEvalReason:
      title: CancelledEvalReason
      description: Cancellation reason
      type: string
      enum:
        - rejected
        - cancelled
        - progress
        - broken
        - xrf_aim
        - empty_spectrum
        - low_spectrum
        - unstable_scale
        - weight_low
        - weight_high
        - wet_weight_low
        - wet_weight_high
        - invalid_density
      minLength: 1
      maxLength: 32
      x-oapi-codegen-extra-tags:
        validate: required,min=1,max=32,lowercase
    ### API ###
    BotInfo:
      title: BotInfo
      description: Bot info data
      type: object
      required:
        - id
        - serial
      properties:
        'id':
          $ref: '#/components/schemas/BotID'
        'serial':
          description: Serial number
          type: string
          minLength: 6
          maxLength: 9
          example: CB-616
          x-oapi-codegen-extra-tags: 
            validate: required,min=6,max=9,uppercase
    BotCommand:
      title: BotCommand
      description: Command to send to the bot
      type: object
      required:
        - name
      properties:
        'name':
          type: string
          description: Predefined command name
          enum:
            - unknown
            - mode_out_of_service
            - mode_operational
            - stop_alarm
            - power_off
          minLength: 1
          maxLength: 32
          example: mode_operational
          x-oapi-codegen-extra-tags:
            validate: required,min=1,max=32,lowercase
    BotStorageState:
      title: BotStorageState
      description: Storage state description
      type: object
      required:
        - occupied_cells
        - total
        - available
      properties:
        'occupied_cells':
          description: Occupied cells
          type: array
          minItems: 0
          maxItems: 9999
          x-oapi-codegen-extra-tags: 
            validate: min=0,max=9999
          items:
            $ref: '#/components/schemas/StorageCellState'
        'total':
          description: Total available cells (-1 if unknown)
          type: integer
          format: int32
          minimum: -1
          maximum: 9999
          example: -1
          x-oapi-codegen-extra-tags: 
            validate: min=-1,max=9999
        'available':
          description: Available/free cells (-1 if unknown)
          type: integer
          format: int32
          minimum: -1
          maximum: 9999
          example: -1
          x-oapi-codegen-extra-tags: 
            validate: min=-1,max=9999
    EvalPhoto:
      title: EvalPhoto
      description: List of evaluation photos
      type: object
      required:
        - id
        - origin
        - uploaded_at
      properties:
        'id':
          $ref: '#/components/schemas/PhotoID'
        'origin':
          $ref: '#/components/schemas/PhotoOriginEnum'
        'uploaded_at':
          description: Time of upload (RFC 3339)
          type: string
          format: date-time
    EvalData:
      title: EvalData
      description: Evaluation data
      type: object
      required:
        - bot_id
        - data
        - started_at
        - updated_at
      properties:
        'bot_id':
          $ref: '#/components/schemas/BotID'
        'data':
          $ref: '#/components/schemas/EvalDataCase'
        'started_at':
          description: Time of start (RFC 3339)
          type: string
          format: date-time
        'updated_at':
          description: Time of last update (RFC 3339)
          type: string
          format: date-time
    EvalDataCase:
      title: EvalDataCase
      description: 'Payload depending on status, one of: started, cancelled, finished'
      type: object
      oneOf:
        - $ref: '#/components/schemas/EvalDataCaseStarted'
        - $ref: '#/components/schemas/EvalDataCaseCancelled'
        - $ref: '#/components/schemas/EvalDataCaseFinished'
      discriminator:
        propertyName: status
        mapping:
          'started': '#/components/schemas/EvalDataCaseStarted'
          'cancelled': '#/components/schemas/EvalDataCaseCancelled'
          'finished': '#/components/schemas/EvalDataCaseFinished'
    EvalDataCaseStarted:
      title: EvalDataCaseStarted
      description: Started evaluation data
      type: object
      required:
        - status
      properties:
        'status':
          $ref: '#/components/schemas/EvalStatus'
      discriminator:
        propertyName: status
    EvalDataCaseCancelled:
      title: EvalDataCaseCancelled
      description: Cancelled or rejected evaluation data
      type: object
      required:
        - status
        - reason
      properties:
        'status':
          $ref: '#/components/schemas/EvalStatus'
        'reason':
          $ref: '#/components/schemas/CancelledEvalReason'
      discriminator:
        propertyName: status
    EvalDataCaseFinished:
      title: EvalDataCaseFinished
      description: Finished evaluation data
      allOf:
        - title: EvalDataCaseFinishedInner
          type: object
          required:
            - status
          properties:
            'status':
              $ref: '#/components/schemas/EvalStatus'
        - $ref: '#/components/schemas/FinishedEvalData'
      discriminator:
        propertyName: status
    MetalPrice:
      title: MetalPrice
      description: Price in currency
      type: object
      required:
        - cur
        - val
      properties:
        'cur':
          description: Currency (ISO 4217)
          type: string
          minLength: 3
          maxLength: 3
          example: USD
          x-oapi-codegen-extra-tags:
            validate: required,len=3,iso4217
        'val':
          description: Value with 2 decimal places
          type: string
          minLength: 4
          example: 13.37
          x-oapi-codegen-extra-tags: 
            validate: required,number,gt=0
    CallbackBinding:
      title: CallbackBinding
      description: Callbacks binding
      type: object
      required:
        - eval_started
        - eval_photo
        - eval_cancelled
        - eval_finished
        - storage_occupied
        - storage_released
        - storage_can_occupy
        - storage_can_release
      properties:
        'eval_started':
          description: Evaluation is started
          type: string
          format: uri
          maxLength: 256
          example: www.example.com
          x-oapi-codegen-extra-tags: 
            validate: omitempty,max=256,url
        'eval_photo':
          description: Evaluation has a new photo
          type: string
          format: uri
          maxLength: 256
          example: www.example.com
          x-oapi-codegen-extra-tags: 
            validate: omitempty,max=256,url
        'eval_cancelled':
          description: Evaluation is cancelled or rejected
          type: string
          format: uri
          maxLength: 256
          example: www.example.com
          x-oapi-codegen-extra-tags: 
            validate: omitempty,max=256,url
        'eval_finished':
          description: Evaluation is finished successfully
          type: string
          format: uri
          maxLength: 256
          example: www.example.com
          x-oapi-codegen-extra-tags: 
            validate: omitempty,max=256,url
        'storage_occupied':
          description: Storage cell is occupied
          type: string
          format: uri
          maxLength: 256
          example: www.example.com
          x-oapi-codegen-extra-tags: 
            validate: omitempty,max=256,url
        'storage_released':
          description: Storage cell is released
          type: string
          format: uri
          maxLength: 256
          example: www.example.com
          x-oapi-codegen-extra-tags: 
            validate: omitempty,max=256,url
        'storage_can_occupy':
          description: Pre-occupation cell check
          type: string
          format: uri
          maxLength: 256
          example: www.example.com
          x-oapi-codegen-extra-tags: 
            validate: omitempty,max=256,url
        'storage_can_release':
          description: Pre-release cell check
          type: string
          format: uri
          maxLength: 256
          example: www.example.com
          x-oapi-codegen-extra-tags: 
            validate: omitempty,max=256,url
    ProxyEndpoint:
      title: ProxyEndpoint
      type: object
      required:
        - name
        - endpoint
      properties:
        'name':
          type: string
          minLength: 1
          maxLength: 64
          example: foobar
          x-oapi-codegen-extra-tags: 
            validate: required,min=1,max=64
        'endpoint':
          type: string
          format: uri
          minimum: 1
          maximum: 256
          example: https://example.com/foobar
          x-oapi-codegen-extra-tags: 
            validate: required,min=1,max=256,url
    ProxyEndpointList:
      title: ProxyEndpointList
      description: List of name proxy endpoints
      type: object
      required:
        - list
      properties:
        'list':
          type: array
          items:
            $ref: '#/components/schemas/ProxyEndpoint'
          x-oapi-codegen-extra-tags: 
            validate: omitempty,unique=Name,dive
    ### CALLBACKS ###
    BaseCallbackData:
      title: BaseCallbackData
      type: object
      required: 
        - project_id
        - bot_id
        - eval_id
      properties:
        'project_id':
          $ref: '#/components/schemas/ProjectID'
        'bot_id':
          $ref: '#/components/schemas/BotID'
    BaseEvalCallbackData:
      title: BaseEvalCallbackData
      allOf:
        - $ref: '#/components/schemas/BaseCallbackData'
        - title: BaseEvalCallbackDataInner
          type: object
          required: 
            - eval_id
          properties:
            'eval_id':
              $ref: '#/components/schemas/EvalID'
    EvalPhotoCallbackData:
      title: CallbackEvalPhotoBody
      allOf:
        - $ref: '#/components/schemas/BaseEvalCallbackData'
        - title: EvalPhotoCallbackDataInner
          type: object
          required:
            - origin
            - photo_id
            - preview
          properties:
            'origin':
              $ref: '#/components/schemas/PhotoOriginEnum'
            'photo_id':
              $ref: '#/components/schemas/PhotoID'
            'preview':
              description: Base-64 encoded image containing low resolution photo
              type: string
              format: bytes
              example: '<base 64 encoded>'
    EvalCancelledCallbackData:
      title: EvalCancelledCallbackData
      allOf:
        - $ref: '#/components/schemas/BaseEvalCallbackData'
        - title: EvalCancelledCallbackDataInner
          type: object
          required:
            - reason
          properties:
            'reason':
              $ref: '#/components/schemas/CancelledEvalReason'
    EvalFinishedCallbackData:
      title: EvalFinishedCallbackData
      allOf:
        - $ref: '#/components/schemas/BaseEvalCallbackData'
        - $ref: '#/components/schemas/FinishedEvalData'
    StorageCallbackData:
      title: StorageCallbackData
      allOf:
        - $ref: '#/components/schemas/BaseCallbackData'
        - title: StorageCallbackDataInner
          type: object
          required: 
            - cell
            - domain
            - transaction
          properties:
            'cell':
              $ref: '#/components/schemas/StorageCell'
            'domain':
              $ref: '#/components/schemas/StorageDomain'
            'transaction':
              $ref: '#/components/schemas/StorageTransaction'
  parameters:
    BotID:
      name: 'botID'
      in: path
      description: Bot ID
      required: true
      schema:
        type: integer
        format: uint64
        example: 42
        minimum: 1
        x-oapi-codegen-extra-tags: 
          validate: required
    EvalID:
      name: 'evalID'
      in: path
      description: Evaluation ID
      required: true
      schema:
        type: integer
        format: uint64
        example: 1337
        minimum: 1
        x-oapi-codegen-extra-tags: 
          validate: required
    PhotoID:
      name: 'photoID'
      in: path
      description: Photo/file ID
      required: true
      schema:
        type: string
        minLength: 32
        maxLength: 32
        example: dafc61a8277b44a3a8dedf197a862783
        x-oapi-codegen-extra-tags: 
          validate: required,len=32,hexadecimal
  responses:
    ### API ###
    Empty:
      description: Empty successful response
      content:
        application/json:
          schema:
            title: APIEmpty
            description: API empty success
            type: object
    Error:
      description: API error response
      content:
        application/json:
          schema:
            title: APIError
            description: API error
            type: object
            required:
              - status
              - message
            properties:
              'status':
                type: integer
                format: int32
                description: Status code
                example: 404
              'message':
                type: string
                example: Error description
    ### CALLBACKS ###
    CallbackEmpty:
      description: Empty response
      content:
        application/json:
          schema:
            type: object
    CallbackAllowance:
      description: Allow or forbid the operation
      content:
        application/json:
          schema:
            type: object
            required:
              - allowed
            properties:
              'allowed':
                description: Allow or not
                type: boolean
    CallbackFailed:
      description: Unsuccessful response forbids the operation automatically
      content:
        application/json:
          schema:
            type: object
    CallbackProxyPayload:
      description: Any payload will be passed back to UI
      content:
        application/json:
          schema:
            type: object
            example:
              'foo': 'bar'
  requestBodies:
    CallbackEvalStarted:
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/BaseEvalCallbackData'
    CallbackEvalPhoto:
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/EvalPhotoCallbackData'
    CallbackEvalCancelled:
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/EvalCancelledCallbackData'
    CallbackEvalFinished:
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/EvalFinishedCallbackData'
    CallbackStorageCellEvent:
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/StorageCallbackData'
    CallbackProxy:
      content:
        'application/json':
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseCallbackData'
              - title: CallbackProxyPayload
                type: object
                required:
                  - payload
                properties:
                  'payload':
                    description: UI provided payload
                    type: object
                    example:
                      foo: bar
  callbacks:
    EvalCallbacks:
      '/eval_started':
        post:
          summary: Evaluation is going to be started
          description: 'Evaluation start is initiated by the UI of the robot. In case of error response the evaluation will be rejected by Goldex and a new evaluation will not be started'
          requestBody:
            $ref: '#/components/requestBodies/CallbackEvalStarted'
          responses:
            '200':
              $ref: '#/components/responses/CallbackAllowance'
            'default':
              $ref: '#/components/responses/CallbackFailed'
          parameters:
            - description: 'Сallbacks [signed by Goldex](https://github.com/goldexrobot/core.integration.backend#callbacks-signature) with JWT and per-project key'
              name: Authorization
              in: header
              required: true
              schema:
                type: string
                example: 'Bearer *JWT*'
            - description: Bot ID
              name: 'X-CBOT-BOT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '42'
            - description: Project ID
              name: 'X-CBOT-PROJECT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '1'
      '/eval_photo':
        post:
          summary: New photo is available
          description: Bot takes several photos during the item evaluation. The photos could help to decide to accept or reject the valuable at business side
          requestBody:
            $ref: '#/components/requestBodies/CallbackEvalPhoto'
          responses:
            '200':
              $ref: '#/components/responses/CallbackEmpty'
          parameters:
            - description: 'Сallbacks [signed by Goldex](https://github.com/goldexrobot/core.integration.backend#callbacks-signature) with JWT and per-project key'
              name: Authorization
              in: header
              required: true
              schema:
                type: string
                example: 'Bearer *JWT*'
            - description: Bot ID
              name: 'X-CBOT-BOT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '42'
            - description: Project ID
              name: 'X-CBOT-PROJECT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '1'
      '/eval_cancelled':
        post:
          summary: Evaluation is cancelled or rejected
          description: Customer has interrupted the evaluation process or some hardware has failed
          requestBody:
            $ref: '#/components/requestBodies/CallbackEvalCancelled'
          responses:
            '200':
              $ref: '#/components/responses/CallbackEmpty'
          parameters:
            - description: 'Сallbacks [signed by Goldex](https://github.com/goldexrobot/core.integration.backend#callbacks-signature) with JWT and per-project key'
              name: Authorization
              in: header
              required: true
              schema:
                type: string
                example: 'Bearer *JWT*'
            - description: Bot ID
              name: 'X-CBOT-BOT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '42'
            - description: Project ID
              name: 'X-CBOT-PROJECT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '1'
      '/eval_finished':
        post:
          summary: Evaluation is successfully finished
          description: All the evaluation measurements are done and the control is passed to the business backend
          requestBody:
            $ref: '#/components/requestBodies/CallbackEvalFinished'
          responses:
            '200':
              $ref: '#/components/responses/CallbackEmpty'
          parameters:
            - description: 'Сallbacks [signed by Goldex](https://github.com/goldexrobot/core.integration.backend#callbacks-signature) with JWT and per-project key'
              name: Authorization
              in: header
              required: true
              schema:
                type: string
                example: 'Bearer *JWT*'
            - description: Bot ID
              name: 'X-CBOT-BOT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '42'
            - description: Project ID
              name: 'X-CBOT-PROJECT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '1'
    StorageCallbacks:
      '/storage_occupied':
        post:
          summary: Cell has been occupied
          description: 'Cell is occupied in one of domain/flow: UI flows like buyout/pawnshop or internal flow (on-board bot dashboard)'
          requestBody:
            $ref: '#/components/requestBodies/CallbackStorageCellEvent'
          responses:
            '200':
              $ref: '#/components/responses/CallbackEmpty'
          parameters:
            - description: 'Сallbacks [signed by Goldex](https://github.com/goldexrobot/core.integration.backend#callbacks-signature) with JWT and per-project key'
              name: Authorization
              in: header
              required: true
              schema:
                type: string
                example: 'Bearer *JWT*'
            - description: Bot ID
              name: 'X-CBOT-BOT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '42'
            - description: Project ID
              name: 'X-CBOT-PROJECT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '1'
      '/storage_released':
        post:
          summary: Cell has been released
          description: 'Cell is released in one of domain/flow: UI flows like shop/pawnshop or internal flow (on-board bot dashboard)'
          requestBody:
            $ref: '#/components/requestBodies/CallbackStorageCellEvent'
          responses:
            '200':
              $ref: '#/components/responses/CallbackEmpty'
          parameters:
            - description: 'Сallbacks [signed by Goldex](https://github.com/goldexrobot/core.integration.backend#callbacks-signature) with JWT and per-project key'
              name: Authorization
              in: header
              required: true
              schema:
                type: string
                example: 'Bearer *JWT*'
            - description: Bot ID
              name: 'X-CBOT-BOT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '42'
            - description: Project ID
              name: 'X-CBOT-PROJECT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '1'
      '/storage_can_occupy':
        post:
          summary: Cell is going to be occupied
          description: Before the storage cell will be occupied with an item (in any domain/flow) this callback is called, thus it gives a fine control over storage management
          requestBody:
            $ref: '#/components/requestBodies/CallbackStorageCellEvent'
          responses:
            '200':
              $ref: '#/components/responses/CallbackAllowance'
            'default':
              $ref: '#/components/responses/CallbackFailed'
          parameters:
            - description: 'Сallbacks [signed by Goldex](https://github.com/goldexrobot/core.integration.backend#callbacks-signature) with JWT and per-project key'
              name: Authorization
              in: header
              required: true
              schema:
                type: string
                example: 'Bearer *JWT*'
            - description: Bot ID
              name: 'X-CBOT-BOT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '42'
            - description: Project ID
              name: 'X-CBOT-PROJECT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '1'
      '/storage_can_release':
        post:
          summary: Cell is going to be released
          description: Before the storage cell will be released (in any domain/flow) this callback is called, thus it gives a fine control over storage management
          requestBody:
            $ref: '#/components/requestBodies/CallbackStorageCellEvent'
          responses:
            '200':
              $ref: '#/components/responses/CallbackAllowance'
            'default':
              $ref: '#/components/responses/CallbackFailed'
          parameters:
            - description: 'Сallbacks [signed by Goldex](https://github.com/goldexrobot/core.integration.backend#callbacks-signature) with JWT and per-project key'
              name: Authorization
              in: header
              required: true
              schema:
                type: string
                example: 'Bearer *JWT*'
            - description: Bot ID
              name: 'X-CBOT-BOT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '42'
            - description: Project ID
              name: 'X-CBOT-PROJECT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '1'
    ProxyCallbacks:
      '/{endpoint}':
        post:
          summary: Named method endpoint
          description: 'Named method called by UI and proxied by Goldex'
          requestBody:
            $ref: '#/components/requestBodies/CallbackProxy'
          responses:
            '200':
              $ref: '#/components/responses/CallbackProxyPayload'
          parameters:
            - description: 'Сallbacks [signed by Goldex](https://github.com/goldexrobot/core.integration.backend#callbacks-signature) with JWT and per-project key'
              name: Authorization
              in: header
              required: true
              schema:
                type: string
                example: 'Bearer *JWT*'
            - description: Bot ID
              name: 'X-CBOT-BOT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '42'
            - description: Project ID
              name: 'X-CBOT-PROJECT-ID'
              in: header
              required: false
              schema:
                type: string
                example: '1'
  securitySchemes:
    http:
      description: 'Basic HTTP auth: project login and secret'
      type: http
      scheme: basic
security:
  - http: []
servers:
  - url: '{scheme}://{host}{path}'
    description: 'API base'
    variables:
      scheme:
        description: Scheme
        enum:
          - http
          - https
        default: https
      host:
        description: Host and port
        default: play.custodybot.com
      path:
        description: Path
        default: /api/v1


openapi: 3.0.3

info:
  title: Goldex Robot API
  description: |-
    The API is the Goldex Robot side API business backend should call to.
  version: "1.2.6"
  contact:
    name: Docs at Github
    url: "https://github.com/goldexrobot/core.integration.backend"

tags:
  - name: bot
    description: Machine state and control
  - name: eval
    description: Items evaluation
  - name: file
    description: Files downloading
  - name: price
    description: Metal prices
  - name: callback
    description: Business backend callbacks

paths:
  #
  # Bots
  #

  "/bots":
    get:
      summary: Available machines
      description: |
        Returns a list of machines **currently** available within a project.

        The list is not fixed as a machine can be moved to/from the project.
      operationId: getBots
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BotInfo"
        "default":
          $ref: "#/components/responses/Error"
      tags:
        - bot

  "/bots/{botID}":
    parameters:
      - $ref: "#/components/parameters/BotID"
    get:
      summary: Machine info
      description: Describes a machine by its ID.
      operationId: getBot
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BotInfo"
        "default":
          $ref: "#/components/responses/Error"
      tags:
        - bot

  "/bots/{botID}/command":
    parameters:
      - $ref: "#/components/parameters/BotID"
    post:
      summary: Send a command
      description: Sends a predefined command to the machine. This allows a manager to control the machine remotely.
      operationId: sendBotCommand
      requestBody:
        description: Command to perform
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BotCommand"
      responses:
        "200":
          $ref: "#/components/responses/Empty"
        "default":
          $ref: "#/components/responses/Error"
      tags:
        - bot

  "/bots/{botID}/evals":
    parameters:
      - $ref: "#/components/parameters/BotID"
      - from:
        name: from
        in: query
        description: Evaluation ID to start from (inclusive)
        required: false
        schema:
          type: integer
          format: uint64
          example: 1
          minimum: 1
          x-oapi-codegen-extra-tags:
            validate: omitempty,min=1
        x-go-name: BotEvalsStartFrom
      - limit:
        name: limit
        in: query
        description: Output limit
        required: false
        schema:
          type: integer
          format: uint64
          example: 1000
          minimum: 1
          maximum: 1000
          x-oapi-codegen-extra-tags:
            validate: omitempty,min=1,max=1000
        x-go-name: BotEvalsLimit
    get:
      summary: Evaluation IDs
      description: |-
        Get a list of evaluations performed on the specified machine.

        Output is limited, so use query params to page through the list.
      operationId: getBotEvals
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                maxLength: 1000
                items:
                  $ref: "#/components/schemas/EvalID"
        "default":
          $ref: "#/components/responses/Error"
      tags:
        - bot

  #
  # Evals
  #

  "/evals/{evalID}":
    parameters:
      - $ref: "#/components/parameters/EvalID"
    get:
      summary: Evaluation state
      description: Retrieves evaluation state and data specified by ID.
      operationId: getEval
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvalData"
        "default":
          $ref: "#/components/responses/Error"
      tags:
        - eval

  "/evals/{evalID}/photos":
    parameters:
      - $ref: "#/components/parameters/EvalID"
    get:
      summary: Evaluation photos
      description: Returns a list of photo IDs belong to the evaluation.
      operationId: getEvalPhotos
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EvalPhoto"
        "default":
          $ref: "#/components/responses/Error"
      tags:
        - eval

  "/evals/{evalID}/raw":
    parameters:
      - $ref: "#/components/parameters/EvalID"
    get:
      summary: Evaluation raw data
      description: Returns raw (hardware) data of the evaluation specified by ID.
      operationId: getEvalRaw
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvalDataRaw"
        "default":
          $ref: "#/components/responses/Error"
      tags:
        - eval

  #
  # Files
  #

  "/files/photo/{photoID}":
    parameters:
      - $ref: "#/components/parameters/PhotoID"
    get:
      summary: Photo content
      description: Returns a content of the photo image specified by ID.
      operationId: getPhotoFile
      responses:
        "200":
          description: Image bytes with a corresponding `Content-Type` header
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
                example: "<JPEG image bytes>"
        "default":
          $ref: "#/components/responses/Error"
      tags:
        - file

  #
  # Prices
  #

  "/prices/lme/{metal}":
    parameters:
      - name: "metal"
        in: path
        description: "Metal"
        required: true
        schema:
          $ref: "#/components/schemas/Alloy"
    get:
      deprecated: true
      summary: London Metal Exchange
      description: |
        Returns current metal price **per gram** trading at [London Metal Exchange](https://www.lme.com/).

        Prices are updated every 60 minutes. Update period may change.
      operationId: getPriceLME
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MetalPrice"
        "default":
          $ref: "#/components/responses/Error"
      tags:
        - price

  #
  # Callbacks binding
  #

  "/callbacks":
    post:
      deprecated: true
      summary: Set callbacks
      description: |
        Sets callback endpoints to listen to events on business backend side. 

        Send an empty object to clear callbacks.

        Endpoint path can contain `PROJECT_ID` and `BOT_ID` inclusions (case sensitive). 

        Query part of the endpoint URL will be dropped.
      operationId: setCallbacks
      requestBody:
        description: Callbacks mapping (or an empty list)
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CallbackBinding"
      responses:
        "200":
          $ref: "#/components/responses/Empty"
        "default":
          $ref: "#/components/responses/Error"
      callbacks:
        "eval":
          $ref: "#/components/callbacks/EvalCallbacks"
      tags:
        - callback

  "/proxy":
    post:
      deprecated: true
      summary: Set proxy endpoints for UI
      description: |
        Sets a list of named endpoints for UI. 

        Special `proxy` requests made by UI will be proxied by Goldex to the business backend endpoints. 

        Send an empty object to clear the list.

        Endpoint path can contain `PROJECT_ID` and `BOT_ID` inclusions (case sensitive). 

        Query part of the endpoint URL will be dropped.
      operationId: setProxyEndpoints
      requestBody:
        description: Endpoints mapping (or an empty list)
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProxyEndpointList"
      responses:
        "200":
          $ref: "#/components/responses/Empty"
        "default":
          $ref: "#/components/responses/Error"
      callbacks:
        "eval":
          $ref: "#/components/callbacks/ProxyCallbacks"
      tags:
        - callback

components:
  schemas:
    #
    # Primitives
    #

    ProjectID:
      title: ProjectID
      description: Project ID
      type: integer
      format: uint64
      example: 1

    BotID:
      title: BotID
      description: Machine ID
      type: integer
      format: uint64
      example: 42

    EvalID:
      title: EvalID
      description: Evaluation ID
      type: integer
      format: uint64
      example: 1337

    PhotoOriginEnum:
      title: PhotoOriginEnum
      description: An origin the photo comes from. `item` is the item photo, `outer` - photo from the outer camera
      type: string
      enum:
        - item
        - outer
      minLength: 1
      maxLength: 8
      x-oapi-codegen-extra-tags:
        validate: required,min=1,max=8,alpha,lowercase

    PhotoID:
      title: PhotoID
      description: Photo ID
      type: string
      minLength: 32
      maxLength: 32
      example: dafc61a8277b44a3a8dedf197a862783
      x-oapi-codegen-extra-tags:
        validate: required,len=32,hexadecimal

    Alloy:
      title: Alloy
      description: Metal alloy
      type: string
      minLength: 2
      maxLength: 2
      enum:
        - au
        - ag
      x-oapi-codegen-extra-tags:
        validate: required,len=2,alpha,lowercase

    SpectrumItem:
      title: SpectrumItem
      type: object
      required:
        - comp
        - cont
      properties:
        "comp":
          type: string
          minLength: 1
          maxLength: 2
          example: cu
          x-oapi-codegen-extra-tags:
            validate: min=1,max=2,alpha,lowercase
        "cont":
          type: number
          format: double
          minimum: 0
          maximum: 100
          example: 13.37
          x-oapi-codegen-extra-tags:
            validate: min=0,max=100

    EvalStatus:
      title: EvalStatus
      description: Evaluation state
      type: string
      enum:
        - started
        - finished
        - rejected
        - failed
        - cancelled
      minLength: 1
      maxLength: 16
      x-oapi-codegen-extra-tags:
        validate: required,min=1,max=16,alpha,lowercase

    EvalRejection:
      title: EvalRejection
      description: Eval rejection reason
      type: string
      enum:
        - undescribed
        - low_spectrum
        - low_weight
        - high_weight
        - unconfirmed
      minLength: 1
      maxLength: 16
      x-oapi-codegen-extra-tags:
        validate: required,min=1,max=16,lowercase

    EvalWarning:
      title: EvalWarning
      type: string
      enum:
        - 45_silver_in_gold
        - tungsten_in_gold
      minLength: 1
      maxLength: 32
      example: tungsten_in_gold
      x-oapi-codegen-extra-tags:
        validate: required,min=1,max=32,lowercase

    FinishedEvalData:
      title: FinishedEvalData
      type: object
      required:
        - alloy
        - alloy_content
        - confidence
        - fineness_carat
        - fineness_millesimal
        - fineness_purity
        - risky
        - spectrum
        - warnings
        - weight
      properties:
        "alloy":
          $ref: "#/components/schemas/Alloy"
        "alloy_content":
          description: Content of the metal in spectrum in percents
          type: number
          format: double
          minimum: 0
          maximum: 100
          example: 99.98
          x-oapi-codegen-extra-tags:
            validate: min=0,max=100
        "confidence":
          description: "Overall result confidence/score [0..1], where 1 - is fully confident result and a value below 0.8 is alarming."
          type: number
          format: double
          minimum: 0
          maximum: 1
          example: 0.889
          x-oapi-codegen-extra-tags:
            validate: min=0,max=1
        "fineness_carat":
          description: Detected fineness in carats
          type: string
          minLength: 2
          maxLength: 3
          example: 24K
          x-oapi-codegen-extra-tags:
            validate: min=2,max=3,alphanum,uppercase
        "fineness_millesimal":
          description: "Detected millesimal fineness. Example: 585 stands for 58.5%, 999 for 99.9%, 9999 for 99.99%"
          type: integer
          format: int32
          minimum: 100
          maximum: 9999
          example: 585
          x-oapi-codegen-extra-tags:
            validate: min=100,max=9999
        "fineness_purity":
          description: Detected fineness purity in percents
          type: number
          format: double
          minimum: 10
          maximum: 100
          example: 99.99
          x-oapi-codegen-extra-tags:
            validate: min=10,max=100
        "risky":
          description: Goldex decision about the evaluation
          type: boolean
          example: true
        "spectrum":
          description: Spectrum data
          type: array
          items:
            $ref: "#/components/schemas/SpectrumItem"
        "warnings":
          description: "Warnings that should help with decision. Usually it is risky to accept the item if a warning is presented"
          type: array
          items:
            $ref: "#/components/schemas/EvalWarning"
        "weight":
          description: Item weight in grams
          type: number
          format: double
          minimum: 0.001
          example: 3.141
          x-oapi-codegen-extra-tags:
            validate: required,min=0.001

    #
    # Bots
    #

    BotInfo:
      title: BotInfo
      description: Machine info
      type: object
      required:
        - id
        - serial
        - type
      properties:
        "id":
          $ref: "#/components/schemas/BotID"
        "serial":
          description: Serial number
          type: string
          minLength: 6
          maxLength: 9
          example: CB-616
          x-oapi-codegen-extra-tags:
            validate: required,min=6,max=9,uppercase
        "type":
          $ref: "#/components/schemas/BotType"

    BotType:
      title: Machine type
      type: string
      enum:
        - bot
        - vending

    BotCommand:
      title: BotCommand
      description: Command to send to the machine
      type: object
      required:
        - name
      properties:
        "name":
          type: string
          description: Predefined command name
          enum:
            - mode_operational
            - mode_out_of_service
            - mode_collector
            - stop_alarm
            - power_off
          minLength: 1
          maxLength: 32
          example: mode_operational
          x-oapi-codegen-extra-tags:
            validate: required,min=1,max=32,lowercase
        "payload":
          type: string
          description: Custom payload if applicable
          maxLength: 1024
          x-oapi-codegen-extra-tags:
            validate: omitempty,max=1024

    #
    # Evaluation
    #

    EvalPhoto:
      title: EvalPhoto
      description: List of evaluation photos
      type: object
      required:
        - id
        - preview_id
        - origin
        - uploaded_at
      properties:
        "id":
          $ref: "#/components/schemas/PhotoID"
        "preview_id":
          $ref: "#/components/schemas/PhotoID"
        "origin":
          $ref: "#/components/schemas/PhotoOriginEnum"
        "uploaded_at":
          description: Time of upload (RFC 3339)
          type: string
          format: date-time

    EvalData:
      title: EvalData
      description: Evaluation data
      type: object
      required:
        - bot_id
        - data
        - started_at
        - updated_at
      properties:
        "bot_id":
          $ref: "#/components/schemas/BotID"
        "data":
          $ref: "#/components/schemas/EvalDataCase"
        "started_at":
          description: Time of start (RFC 3339)
          type: string
          format: date-time
        "updated_at":
          description: Time of last update (RFC 3339)
          type: string
          format: date-time

    EvalDataCase:
      title: EvalDataCase
      description: "Payload depending on evaluation status"
      type: object
      oneOf:
        - $ref: "#/components/schemas/EvalDataCaseStarted"
        - $ref: "#/components/schemas/EvalDataCaseFinished"
        - $ref: "#/components/schemas/EvalDataCaseRejected"
        - $ref: "#/components/schemas/EvalDataCaseFailed"
        - $ref: "#/components/schemas/EvalDataCaseCancelled"
      discriminator:
        propertyName: status
        mapping:
          "started": "#/components/schemas/EvalDataCaseStarted"
          "finished": "#/components/schemas/EvalDataCaseFinished"
          "rejected": "#/components/schemas/EvalDataCaseRejected"
          "failed": "#/components/schemas/EvalDataCaseFailed"
          "cancelled": "#/components/schemas/EvalDataCaseCancelled"

    EvalDataCaseStarted:
      title: EvalDataCaseStarted
      description: Started evaluation data
      type: object
      required:
        - status
      properties:
        "status":
          $ref: "#/components/schemas/EvalStatus"
      discriminator:
        propertyName: status

    EvalDataCaseFinished:
      title: EvalDataCaseFinished
      description: Finished evaluation data
      allOf:
        - title: EvalDataCaseFinishedInner
          type: object
          required:
            - status
          properties:
            "status":
              $ref: "#/components/schemas/EvalStatus"
        - $ref: "#/components/schemas/FinishedEvalData"
      discriminator:
        propertyName: status

    EvalDataCaseRejected:
      title: EvalDataCaseRejected
      description: Evaluation is rejected by Goldex
      type: object
      required:
        - status
        - reason
      properties:
        "status":
          $ref: "#/components/schemas/EvalStatus"
        "reason":
          $ref: "#/components/schemas/EvalRejection"
      discriminator:
        propertyName: status

    EvalDataCaseFailed:
      title: EvalDataCaseFailed
      description: Something went wrong
      type: object
      required:
        - status
      properties:
        "status":
          $ref: "#/components/schemas/EvalStatus"
      discriminator:
        propertyName: status

    EvalDataCaseCancelled:
      title: EvalDataCaseCancelled
      description: Customer has cancelled the eval
      type: object
      required:
        - status
      properties:
        "status":
          $ref: "#/components/schemas/EvalStatus"
      discriminator:
        propertyName: status

    EvalDataRaw:
      title: EvalDataRaw
      description: Evaluation raw data
      type: object
      required:
        - bot_id
        - spectrum
        - weight
        - hydro
        - result
        - started_at
        - updated_at
      properties:
        "bot_id":
          $ref: "#/components/schemas/BotID"
        "spectrum":
          $ref: "#/components/schemas/EvalDataRawSpectrum"
        "weight":
          $ref: "#/components/schemas/EvalDataRawWeight"
        "hydro":
          $ref: "#/components/schemas/EvalDataRawHydro"
        "result":
          $ref: "#/components/schemas/EvalDataRawResult"
        "started_at":
          description: Time of start (RFC 3339)
          type: string
          format: date-time
        "updated_at":
          description: Time of last update (RFC 3339)
          type: string
          format: date-time

    EvalDataRawSpectrum:
      title: EvalDataRawSpectrum
      type: object
      required:
        - spectrum
        - alloy
        - alloy_content
        - fineness
      properties:
        "spectrum":
          description: Spectrum data
          type: array
          items:
            $ref: "#/components/schemas/SpectrumItem"
        "alloy":
          $ref: "#/components/schemas/Alloy"
        "alloy_content":
          description: Content of the target metal in spectrum, percents
          type: number
          format: double
          minimum: 0
          maximum: 100
          example: 99.98
          x-oapi-codegen-extra-tags:
            validate: min=0,max=100
        "fineness":
          description: Spectral fineness. Example, 585 stands for 58.5%, 999 for 99.9%, 9999 for 99.99%
          type: integer
          format: int32
          minimum: 100
          maximum: 9999
          example: 585
          x-oapi-codegen-extra-tags:
            validate: min=100,max=9999

    EvalDataRawWeight:
      title: EvalDataRawWeight
      type: object
      required:
        - weight
      properties:
        "weight":
          description: Item weight in air, grams
          type: number
          format: double
          minimum: 0.001
          example: 3.141
          x-oapi-codegen-extra-tags:
            validate: required,min=0.001
      
    EvalDataRawHydro:
      title: EvalDataRawHydro
      type: object
      required:
        - weight
        - density
        - fineness
      properties:
        "weight":
          description: Item weight in water, grams
          type: number
          format: double
          minimum: 0.001
          example: 3.141
          x-oapi-codegen-extra-tags:
            validate: required,min=0.001
        "density":
          description: Calculated item density, grams per cubic centimeter
          type: number
          format: double
          minimum: 0.001
          example: 3.141
          x-oapi-codegen-extra-tags:
            validate: required,min=0.001
        "fineness":
          description: Hydrostatic fineness. Example, 585 stands for 58.5%, 999 for 99.9%, 9999 for 99.99%
          type: integer
          format: int32
          minimum: 100
          maximum: 9999
          example: 585
          x-oapi-codegen-extra-tags:
            validate: min=100,max=9999
        
    EvalDataRawResult:
      title: EvalDataRawResult
      type: object
      required:
        - fineness
        - confidence
        - risky
        - warnings
      properties:
        "fineness":
          description: Resulting fineness. Example, 585 stands for 58.5%, 999 for 99.9%, 9999 for 99.99%
          type: integer
          format: int32
          minimum: 100
          maximum: 9999
          example: 585
          x-oapi-codegen-extra-tags:
            validate: min=100,max=9999
        "confidence":
          description: Overall confidence/score [0..1], where 1 - is fully confident result and a value below 0.8 is alarming
          type: number
          format: double
          minimum: 0
          maximum: 1
          example: 0.889
          x-oapi-codegen-extra-tags:
            validate: min=0,max=1
        "risky":
          description: Goldex decision about the evaluation
          type: boolean
          example: true
        "warnings":
          description: Warnings that should help with the decision. Usually it is risky to accept the item if a warning is presented
          type: array
          items:
            $ref: "#/components/schemas/EvalWarning"

    #
    # Prices
    #

    MetalPrice:
      title: MetalPrice
      description: Price in currency
      type: object
      required:
        - cur
        - val
      properties:
        "cur":
          description: Currency (ISO 4217)
          type: string
          minLength: 3
          maxLength: 3
          example: USD
          x-oapi-codegen-extra-tags:
            validate: required,len=3,iso4217
        "val":
          description: Value with 2 decimal places
          type: string
          minLength: 4
          example: 13.37
          x-oapi-codegen-extra-tags:
            validate: required,number,gt=0

    #
    # Callbacks binding
    #

    CallbackBinding:
      title: CallbackBinding
      description: Callbacks binding
      type: object
      required:
        - eval_started
        - eval_photo
        - eval_cancelled
        - eval_finished
      properties:
        "eval_started":
          description: Evaluation is started
          type: string
          format: uri
          maxLength: 256
          example: www.example.com
          x-oapi-codegen-extra-tags:
            validate: omitempty,max=256,url
        "eval_photo":
          description: Evaluation has a new photo
          type: string
          format: uri
          maxLength: 256
          example: www.example.com
          x-oapi-codegen-extra-tags:
            validate: omitempty,max=256,url
        "eval_cancelled":
          description: Evaluation is cancelled or rejected
          type: string
          format: uri
          maxLength: 256
          example: www.example.com
          x-oapi-codegen-extra-tags:
            validate: omitempty,max=256,url
        "eval_finished":
          description: Evaluation is finished successfully
          type: string
          format: uri
          maxLength: 256
          example: www.example.com
          x-oapi-codegen-extra-tags:
            validate: omitempty,max=256,url

    ProxyEndpoint:
      title: ProxyEndpoint
      type: object
      required:
        - name
        - endpoint
      properties:
        "name":
          type: string
          minLength: 1
          maxLength: 64
          example: foobar
          x-oapi-codegen-extra-tags:
            validate: required,min=1,max=64
        "endpoint":
          type: string
          format: uri
          minimum: 1
          maximum: 256
          example: https://example.com/foobar
          x-oapi-codegen-extra-tags:
            validate: required,min=1,max=256,url

    ProxyEndpointList:
      title: ProxyEndpointList
      description: List of name proxy endpoints
      type: object
      required:
        - list
      properties:
        "list":
          type: array
          items:
            $ref: "#/components/schemas/ProxyEndpoint"
          x-oapi-codegen-extra-tags:
            validate: omitempty,unique=Name,dive

    #
    # Callbacks payload
    #

    BaseCallbackData:
      title: BaseCallbackData
      type: object
      required:
        - project_id
        - bot_id
        - eval_id
      properties:
        "project_id":
          $ref: "#/components/schemas/ProjectID"
        "bot_id":
          $ref: "#/components/schemas/BotID"

    BaseEvalCallbackData:
      title: BaseEvalCallbackData
      allOf:
        - $ref: "#/components/schemas/BaseCallbackData"
        - title: BaseEvalCallbackDataInner
          type: object
          required:
            - eval_id
          properties:
            "eval_id":
              $ref: "#/components/schemas/EvalID"

    EvalPhotoCallbackData:
      title: CallbackEvalPhotoBody
      allOf:
        - $ref: "#/components/schemas/BaseEvalCallbackData"
        - $ref: "#/components/schemas/EvalPhoto"
        - title: EvalPhotoCallbackDataInner
          type: object
          required:
            - preview
          properties:
            "preview":
              description: Base-64 encoded image containing low resolution photo
              type: string
              format: bytes
              example: "<base 64 encoded>"

    EvalCancelledCallbackData:
      title: EvalCancelledCallbackData
      allOf:
        - $ref: "#/components/schemas/BaseEvalCallbackData"
        - title: EvalCancelledCallbackDataInner
          type: object
          required:
            - status
          properties:
            "status":
              $ref: "#/components/schemas/EvalStatus"

    EvalFinishedCallbackData:
      title: EvalFinishedCallbackData
      allOf:
        - $ref: "#/components/schemas/BaseEvalCallbackData"
        - $ref: "#/components/schemas/FinishedEvalData"

  #
  # Parameters
  #

  parameters:
    BotID:
      name: "botID"
      in: path
      description: Machine ID
      required: true
      schema:
        type: integer
        format: uint64
        example: 42
        minimum: 1
        x-oapi-codegen-extra-tags:
          validate: required
      x-go-name: BotIDParam

    EvalID:
      name: "evalID"
      in: path
      description: Evaluation ID
      required: true
      schema:
        type: integer
        format: uint64
        example: 1337
        minimum: 1
        x-oapi-codegen-extra-tags:
          validate: required
      x-go-name: EvalIDParam

    PhotoID:
      name: "photoID"
      in: path
      description: Photo/file ID
      required: true
      schema:
        type: string
        minLength: 32
        maxLength: 32
        example: dafc61a8277b44a3a8dedf197a862783
        x-oapi-codegen-extra-tags:
          validate: required,len=32,hexadecimal
      x-go-name: PhotoIDParam

    CallbackJWT:
      description: |
        [Goldex signature](https://github.com/goldexrobot/core.integration.backend#callbacks-signature)
      in: header
      name: Authorization
      required: true
      schema:
        type: string
      example: "Bearer {jwt.goes.here}"

    CallbackBotID:
      description: Machine ID
      name: "X-CBOT-BOT-ID"
      in: header
      required: true
      schema:
        type: string
      example: 42

    CallbackProjectID:
      description: Project ID
      name: "X-CBOT-PROJECT-ID"
      in: header
      required: true
      schema:
        type: string
      example: 1
  #
  # Responses
  #

  responses:
    #
    # API
    #

    Empty:
      description: Empty successful response
      content:
        application/json:
          schema:
            title: APIEmpty
            description: API empty success
            type: object
    Error:
      description: API error response
      content:
        application/json:
          schema:
            title: APIError
            description: API error
            type: object
            required:
              - status
              - message
            properties:
              "status":
                type: integer
                format: int32
                description: Status code
                example: 404
              "message":
                type: string
                example: Error description

    #
    # Callbacks expected responses
    #

    CallbackEmpty:
      description: Empty response
      content:
        application/json:
          schema:
            type: object

    CallbackAllowance:
      description: Allow or forbid the operation
      content:
        application/json:
          schema:
            type: object
            required:
              - allowed
            properties:
              "allowed":
                description: Allow or not
                type: boolean

    CallbackFailed:
      description: Unsuccessful response forbids the operation automatically
      content:
        application/json:
          schema:
            type: object

    CallbackProxyPayload:
      description: Any payload will be passed back to UI
      content:
        application/json:
          schema:
            type: object
            example:
              "foo": "bar"

  #
  # Request bodies
  #

  requestBodies:
    #
    # Callbacks bodies
    #

    CallbackEvalStarted:
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/BaseEvalCallbackData"
    CallbackEvalPhoto:
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/EvalPhotoCallbackData"
    CallbackEvalCancelled:
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/EvalCancelledCallbackData"
    CallbackEvalFinished:
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/EvalFinishedCallbackData"
    CallbackProxy:
      content:
        "application/json":
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseCallbackData"
              - title: CallbackProxyPayload
                type: object
                required:
                  - payload
                properties:
                  "payload":
                    description: UI provided payload
                    type: object
                    example:
                      foo: bar

  #
  # Callbacks
  #

  callbacks:
    EvalCallbacks:
      "/eval_started":
        post:
          deprecated: true
          summary: Evaluation is started
          description: |-
            Callback will be sent just before the UI will get acknowledgment of evaluation successful start. 

            Callback is **synchronous**, but the response to the callback does not matter and does not affect the flow
          requestBody:
            $ref: "#/components/requestBodies/CallbackEvalStarted"
          responses:
            "200":
              $ref: "#/components/responses/CallbackEmpty"
          parameters:
            - $ref: "#/components/parameters/CallbackJWT"
            - $ref: "#/components/parameters/CallbackProjectID"
            - $ref: "#/components/parameters/CallbackBotID"

      "/eval_photo":
        post:
          deprecated: true
          summary: New photo is available
          description: |-
            Callback will be sent once a new photo of evaluating item is received from a robot. 

            Callback is **asynchronous**: status 200 is expected in a response to the callback, otherwise Goldex will continue to deliver it for the next 3 hours
          requestBody:
            $ref: "#/components/requestBodies/CallbackEvalPhoto"
          responses:
            "200":
              $ref: "#/components/responses/CallbackEmpty"
          parameters:
            - $ref: "#/components/parameters/CallbackJWT"
            - $ref: "#/components/parameters/CallbackProjectID"
            - $ref: "#/components/parameters/CallbackBotID"

      "/eval_cancelled":
        post:
          deprecated: true
          summary: Evaluation is cancelled or rejected
          description: |-
            Callback will be sent on the next events: customer has interrupted the evaluation process, Goldex has rejected the item, some hardware has failed. 

            Callback is **asynchronous**: status 200 is expected in a response to the callback, otherwise Goldex will continue to deliver it for the next 3 hours
          requestBody:
            $ref: "#/components/requestBodies/CallbackEvalCancelled"
          responses:
            "200":
              $ref: "#/components/responses/CallbackEmpty"
          parameters:
            - $ref: "#/components/parameters/CallbackJWT"
            - $ref: "#/components/parameters/CallbackProjectID"
            - $ref: "#/components/parameters/CallbackBotID"

      "/eval_finished":
        post:
          deprecated: true
          summary: Evaluation is successfully finished
          description: |-
            Callback is sent when all the evaluation measurements are done and the control is passed to the business backend. 

            Callback is **asynchronous**: status 200 is expected in a response to the callback, otherwise Goldex will continue to deliver it for the next 3 hours
          requestBody:
            $ref: "#/components/requestBodies/CallbackEvalFinished"
          responses:
            "200":
              $ref: "#/components/responses/CallbackEmpty"
          parameters:
            - $ref: "#/components/parameters/CallbackJWT"
            - $ref: "#/components/parameters/CallbackProjectID"
            - $ref: "#/components/parameters/CallbackBotID"

    ProxyCallbacks:
      "/{endpoint}":
        post:
          deprecated: true
          summary: Named UI endpoints
          description: Named UI endpoint to proxy via Goldex to the business backend side
          requestBody:
            $ref: "#/components/requestBodies/CallbackProxy"
          responses:
            "200":
              $ref: "#/components/responses/CallbackProxyPayload"
          parameters:
            - $ref: "#/components/parameters/CallbackJWT"
            - $ref: "#/components/parameters/CallbackProjectID"
            - $ref: "#/components/parameters/CallbackBotID"

  #
  # Security
  #

  securitySchemes:
    http:
      description: "Basic HTTP auth: project login and secret"
      type: http
      scheme: basic

security:
  - http: []

servers:
  - url: "{scheme}://{host}{path}"
    description: "API base"
    variables:
      scheme:
        description: Scheme
        enum:
          - http
          - https
        default: https
      host:
        description: Host and port
        default: play.custodybot.com
      path:
        description: Path
        default: /emu/goldex/v1

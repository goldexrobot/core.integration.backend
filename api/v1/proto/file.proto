syntax = "proto3";

package core.backend.integration.api.v1.file;

option go_package="github.com/goldexrobot/core.integration/api/v1/golang/file/file;file";

import "google/api/annotations.proto";
import "google/api/httpbody.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto"; // https://github.com/envoyproxy/protoc-gen-validate#constraint-rules

service File {
	// Get file/photo content by ID
	rpc File(FileRequest) returns (stream google.api.HttpBody) {
		option (google.api.http) = {
			get: "/v1/file/{id}";
		};

		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			operation_id: "file";
			produces: "any";
			responses: [
				{
					key: "200";
					value: {
						description: "For GRPC";
						examples: {
							key: "any";
							value: "streamed google.api.HttpBody";
						}
					}
				},
				{
					key: "200-http";
					value: {
						description: "For HTTP";
						headers: {
							key: "Content-Type";
							value: {
								description: "any";
								type: "string";
							}
						}
						examples: {
							key: "any";
							value: "<image bytes>";
						}
					}
				}
			]
		};
	}
}

message FileRequest {
	// File ID
	string id = 1 [(validate.rules).string = { pattern: "^[a-zA-Z0-9]{32}$" }];
}

syntax = "proto3";

package core.backend.integration.api.v1.price;

option go_package="github.com/goldexrobot/core.integration/api/v1/golang/price/price;price";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto"; // https://github.com/envoyproxy/protoc-gen-validate#constraint-rules

service Price {
	// Get price per gram of the metal on LME
	rpc Price(PriceRequest) returns (PriceResponse) {
		option (google.api.http) = {
			get: "/v1/price/{metal}";
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			operation_id: "price";
		};
	}
}

message PriceRequest {
	// Metal: "au" or "ag"
	string metal = 1 [(validate.rules).string = { in: ["au", "ag"] }];
}

message PriceResponse {
	option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        example: '{"price": { "USD": "58.12", "EUR": "51.25", "XXX": "XX.XX" }}';
    };

	// Currency to value: USD => 58.12
	map<string,string> price = 1;

	reserved 2 to 5;
}
